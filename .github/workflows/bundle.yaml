name: Build Flutter AppBundle

on:
    push:
        branches:
            - release

permissions:
  contents: write

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Cache Gradle
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: "17"
                  distribution: "temurin"

            - name: Cache NDK
              uses: actions/cache@v3
              with:
                  path: /usr/local/lib/android/sdk/ndk/27.0.12077973
                  key: ${{ runner.os }}-ndk-27.0.12077973
                  restore-keys: |
                      ${{ runner.os }}-ndk-

            - name: Set Up Gradle Properties
              run: cp android/gradle.properties.release android/gradle.properties

            - name: Set Up Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: "3.32.4"
                  channel: "stable"
              env:
                  FLUTTER_VERSION: ${{ steps.flutter-setup.outputs.FLUTTER_VERSION }}

            - name: Cache Flutter SDK
              uses: actions/cache@v3
              with:
                  path: ~/.flutter
                  key: ${{ runner.os }}-flutter${{ steps.flutter-setup.outputs.FLUTTER_VERSION }}
                  restore-keys: |
                      ${{ runner.os }}-flutter-

            - name: Install dependencies
              run: flutter pub get

            - name: Build AppRelease
              run: flutter build apk --release

            - name: Extract Versions
              run : |
                    versi=$(cat android/app/build.gradle.kts | grep versionName | awk '{ print $3 }')
                    echo 'VERSION=$versi' >> $GITHUB_ENV

            - name: Create Github release
              uses: ncipollo/release-action@v1
              with:
                  tag: v${{ env.VERSION }}
                  name: Release v${{ env.VERSION }}
                  body: Release for version ${{ env.VERSION }}
                  artifacts: "build/app/outputs/flutter-apk/app-release.apk"
                  token: ${{ secrets.GITHUB_TOKEN }}
